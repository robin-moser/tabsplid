name: Build
env:
  IMAGENAME: tabsplid
  STACKNAME: tabsplid-dev

on:
  push:
    branches: ["**"]

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    strategy:
      matrix:
        component: [backend, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to private Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}/${{ matrix.component }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr

      - name: Add GITHUB_SHORT_SHA env
        run: echo "GITHUB_SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and push ${{ matrix.component }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          file: ./Dockerfile.${{ matrix.component }}
          build-args: |
            APP_VERSION=${{ steps.meta.outputs.version }}-${{ env.GITHUB_SHORT_SHA }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Deploy stack
        uses: robin-moser/portainer-stack-deploy@v2
        with:
          portainer-host: ${{ secrets.PORTAINER_HOST }}
          token: ${{ secrets.PORTAINER_TOKEN }}
          swarm-id: ${{ secrets.PORTAINER_SWARM_ID }}
          stack-name: ${{ env.STACKNAME }}
          tag-replacements: |
            ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}/backend:${{ needs.release.outputs.version }}
            ${{ secrets.REGISTRY_URL }}/${{ env.IMAGENAME }}/frontend:${{ needs.release.outputs.version }}
